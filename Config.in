#

mainmenu "Halos BSP Buildroot $HALOS_VERSION Configuration"

config HAVE_DOT_CONFIG
	bool
	default y

config VERSION
	string
	option env="HALOS_VERSION_FULL"

config HOSTARCH
	string
	option env="HOSTARCH"

config BUILD_DIR
	string
	option env="BUILD_DIR"

# Hidden config symbols for packages to check system gcc version
config HOST_GCC_VERSION
	string
	option env="HOST_GCC_VERSION"

config HOST_GCC_AT_LEAST_4_5
	bool
	default y if HOST_GCC_VERSION = "4 5"

# When adding new entries above, be sure to update
# the HOSTCC_MAX_VERSION variable in the Makefile.

# Hidden boolean selected by packages in need of Java in order to build
# (example: kodi)
config NEEDS_HOST_JAVA
	bool

# Hidden boolean selected by packages in need of javac in order to build
# (example: classpath)
config NEEDS_HOST_JAVAC
	bool

# Hidden boolean selected by packages in need of jar in order to build
# (example: classpath)
config NEEDS_HOST_JAR
	bool

# Hidden boolean selected by pre-built packages for x86, when they
# need to run on x86-64 machines (example: pre-built external
# toolchains, binary tools like SAM-BA, etc.).
config HOSTARCH_NEEDS_IA32_LIBS
	bool

# Hidden boolean selected by packages that need to build 32 bits
# binaries with the host compiler, even on 64 bits build machines (e.g
# bootloaders).
config HOSTARCH_NEEDS_IA32_COMPILER
	bool

# Hidden boolean selected by packages that need the host to have an
# UTF8 locale.
config NEEDS_HOST_UTF8_LOCALE
	bool


menu "Commands"
config WGET
	string "Wget command"
	default "wget --passive-ftp -nd -t 3"

config SVN
	string "Subversion (svn) command"
	default "svn --non-interactive"

config BZR
	string "Bazaar (bzr) command"
	default "bzr"

config GIT
	string "Git command"
	default "git"

config CVS
	string "CVS command"
	default "cvs"

config LOCALFILES
	string "Local files retrieval command"
	default "cp"

config SCP
	string "Secure copy (scp) command"
	default "scp"

config HG
	string "Mercurial (hg) command"
	default "hg"

config ZCAT
	string "zcat command"
	default "gzip -d -c"
	help
	  Command to be used to extract a gzip'ed file to stdout. zcat
	  is identical to gunzip -c except that the former may not be
	  available on your system.
	  Default is "gzip -d -c"
	  Other possible values include "gunzip -c" or "zcat".

config BZCAT
	string "bzcat command"
	default "bzcat"
	help
	  Command to be used to extract a bzip2'ed file to stdout.
	  bzcat is identical to bunzip2 -c except that the former may
	  not be available on your system.
	  Default is "bzcat"
	  Other possible values include "bunzip2 -c" or "bzip2 -d -c".

config XZCAT
	string "xzcat command"
	default "xzcat"
	help
	  Command to be used to extract a xz'ed file to stdout.
	  Default is "xzcat"

config LZCAT
	string "lzcat command"
	default "lzip -d -c"
	help
	  Command to be used to extract a lzip'ed file to stdout.
	  Default is "lzip -d -c"

config TAR_OPTIONS
	string "Tar options"
	default ""
	help
	  Options to pass to tar when extracting the sources.
	  E.g. " -v --exclude='*.svn*'" to exclude all .svn internal
	  files and to be verbose.

endmenu

config HOST_DIR
	string "Host dir"
	default "$(BASE_DIR)/host"
	help
	  Directory to store all the binary files that are built for the
	  host. This includes the cross compilation toolchain when
	  building the internal buildroot toolchain.

	  The default is $(BASE_DIR)/host

choice
	prompt "gcc debug level"
	default DEBUG_2
	help
	  Set the debug level for gcc

config DEBUG_1
	bool "debug level 1"
	help
	  Debug level 1 produces minimal information, enough for making
	  backtraces in parts of the program that you don't plan to
	  debug. This includes descriptions of functions and external
	  variables, but no information about local variables and no
	  line numbers.

config DEBUG_2
	bool "debug level 2"
	help
	  The default gcc debug level is 2

config DEBUG_3
	bool "debug level 3"
	help
	  Level 3 includes extra information, such as all the macro
	  definitions present in the program. Some debuggers support
	  macro expansion when you use -g3.
endchoice
